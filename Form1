<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Request for Proposal (Commercial PV)</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            color: #000;
            padding: 20px;
        }
        h1 {
            color: #1e90ff;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="email"], select {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .required {
            color: red;
        }
        .optional {
            color: gray;
        }
        .btn-submit {
            background-color: #1e90ff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>

<h1>Request for Proposal (Commercial PV)</h1>

<form id="rfp-form">
    <div class="form-group">
        <label for="rep-name">Rep Name <span class="required">*</span></label>
        <input type="text" id="rep-name" name="repName" required>
    </div>
    <div class="form-group">
        <label for="rep-email">Rep Email <span class="required">*</span></label>
        <input type="email" id="rep-email" name="repEmail" required>
    </div>
    <div class="form-group">
        <label for="customer-name">Customer Name (POC)</label>
        <input type="text" id="customer-name" name="customerName">
    </div>
    <div class="form-group">
        <label for="company-name">Company Name <span class="required">*</span></label>
        <input type="text" id="company-name" name="companyName" required>
    </div>
    <div class="form-group">
        <label for="company-email">Email <span class="required">*</span> <span class="optional">(optional)</span></label>
        <input type="email" id="company-email" name="companyEmail">
    </div>
    <div class="form-group">
        <label for="company-phone">Phone <span class="required">*</span> <span class="optional">(optional)</span></label>
        <input type="text" id="company-phone" name="companyPhone">
    </div>
    <div class="form-group">
        <label for="company-address">Company Address <span class="required">*</span></label>
        <input type="text" id="company-address" name="companyAddress" required>
    </div>
    <div class="form-group">
        <label for="state">State <span class="required">*</span></label>
        <select id="state" name="state" required>
            <!-- Options will be populated dynamically -->
        </select>
    </div>
    <div class="form-group">
        <label for="city">Nearest City <span class="required">*</span></label>
        <select id="city" name="city" required>
            <!-- Options will be populated dynamically -->
        </select>
    </div>
    <div class="form-group">
        <label for="install-location">Install Location (Coordinates) <span class="optional">(optional)</span></label>
        <input type="text" id="install-location" name="installLocation">
    </div>
    <div class="form-group">
        <label for="usage-type">Usage Type</label>
        <select id="usage-type" name="usageType">
            <option value="monthly">Monthly</option>
            <option value="daily">Daily</option>
        </select>
    </div>
    <div class="form-group">
        <label for="january-usage">January Usage</label>
        <input type="text" id="january-usage" name="januaryUsage">
    </div>
    <div class="form-group">
        <label for="january">January</label>
        <input type="text" id="january" name="january">
    </div>
    <div class="form-group">
        <label for="february">February</label>
        <input type="text" id="february" name="february">
    </div>
    <div class="form-group">
        <label for="march">March</label>
        <input type="text" id="march" name="march">
    </div>
    <div class="form-group">
        <label for="april">April</label>
        <input type="text" id="april" name="april">
    </div>
    <div class="form-group">
        <label for="may">May</label>
        <input type="text" id="may" name="may">
    </div>
    <div class="form-group">
        <label for="june">June</label>
        <input type="text" id="june" name="june">
    </div>
    <div class="form-group">
        <label for="july">July</label>
        <input type="text" id="july" name="july">
    </div>
    <div class="form-group">
        <label for="august">August</label>
        <input type="text" id="august" name="august">
    </div>
    <div class="form-group">
        <label for="september">September</label>
        <input type="text" id="september" name="september">
    </div>
    <div class="form-group">
        <label for="october">October</label>
        <input type="text" id="october" name="october">
    </div>
    <div class="form-group">
        <label for="november">November</label>
        <input type="text" id="november" name="november">
    </div>
    <div class="form-group">
        <label for="december">December</label>
        <input type="text" id="december" name="december">
    </div>
    <button type="submit" class="btn-submit">Submit</button>
</form>

<script>
    // Populate the state dropdown
    const states = [...new Set([${[...df['State'].map(state => `'${state}'`)].join(', ')}])].sort();
    const stateDropdown = document.getElementById('state');
    states.forEach(state => {
        const option = document.createElement('option');
        option.value = state;
        option.text = state;
        stateDropdown.add(option);
    });

    // Populate the city dropdown based on selected state
    const stateCityMap = ${JSON.stringify(df.groupby(['State'])['City'].apply(list).to_dict())};
    stateDropdown.addEventListener('change', function() {
        const selectedState = this.value;
        const cityDropdown = document.getElementById('city');
        cityDropdown.innerHTML = ''; // Clear existing options
        if (selectedState in stateCityMap) {
            stateCityMap[selectedState].forEach(city => {
                const option = document.createElement('option');
                option.value = city;
                option.text = city;
                cityDropdown.add(option);
            });
        }
    });

    // Handle form submission
    document.getElementById('rfp-form').addEventListener('submit', function(e) {
        e.preventDefault();
        const formData = new FormData(this);
        fetch('https://script.google.com/macros/s/AKfycby6d5uneehm3a29RqscR3P-Nc6t1fF9pvSRfHHXYz-cuL3gMJ1ZdoiyfQ8pudcIDArc/exec', { // Input the actual web app URL
            method: 'POST',
            body: formData
        })
        .then(response => response.text())
        .then(data => alert(data))
        .catch(error => console.error('Error:', error));
    });
</script>

</body>
</html>
